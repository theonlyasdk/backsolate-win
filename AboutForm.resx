<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="creditsBox.Text" xml:space="preserve">
    <value>Image subject isolation/background remover using CNNs.
All the processing tasks are done in your device hence no data is sent to any servers.
Once the model is downloaded, the application can work offline.
If you face any issues or bugs, you're welcome to open an issue on the repo of this project (click the link located at the bottom left corner)

Credits:
- u2net, u2netp, u2net_human_seg, u2net_cloth_seg, silueta, isnet-general-use, isnet-anime by Xuebin Qin (https://github.com/xuebinqin/U-2-Net)
- birefnet-general, birefnet-general-lite, birefnet-portrait, birefnet-dis, birefnet-hrsod, birefnet-cod, birefnet-massive by ZhengPeng7 (https://github.com/ZhengPeng7/BiRefNet)
- ONNX Model Runtime by Microsoft (https://github.com/microsoft/onnxruntime)
- Other models from: https://github.com/danielgatis/rembg

The MIT License:
Copyright 2025 TheOnlyASDK

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQEBAAAA
        AAACAgIHAgICFAICAiACAgIgAgICFQICAgcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMDAwAAAAAAAQEBCAAA
        ABgCAgJCAgICgQICArQCAgLSAgIC4AICAuACAgLTAgICtwICAoUCAgJEAgICEAICAgACAgIAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEBAQAAAAAAAAAAGgAA
        AGsCAgK1AwMD1wMDA/IDAwP/BAQE/wQEBP8EBAT/AwMD/wMDA/8EBAT/BgYG/wMDA/QBAQHCAgICZAMD
        AxEDAwMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAQEAAwMDAAIC
        AjgGBgbHGRkZ/TY2Nv9cXFz/JiYm/wICAv8yMjL/U1NT/1NTU/9lZWX/Kioq/w8PD/8iIiL/Ghoa/w0N
        Df8EBAT6BQUFuAkJCTgREREACQkJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIC
        AgAAAAAGAwMDriwsLP9ycnL/nJyc/5eXl/8aGhr/AAAA/x8fH/95eXn/mpqa/3Z2dv8YGBj/Hx8f/zMz
        M/80NDT/NTU1/ycnJ/8QEBD/EhIS3xoaGlMkJCQBGhoaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        AB/8AAA//gAAf/8AAP//wAP///gf//////8=
</value>
  </data>
</root>